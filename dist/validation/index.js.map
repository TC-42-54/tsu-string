{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/validation/index.ts"],"names":[],"mappings":";;;;AAAA,yDAAgD;AAEzC,MAAM,QAAQ,GAAG,CAAC,GAAY,EAAE,EAAE,CAAC,OAAO,GAAG,KAAK,QAAQ,CAAC;AAArD,QAAA,QAAQ,YAA6C;AAC3D,MAAM,YAAY,GAAG,CAC1B,GAAY,EACZ,YAAoB,EACpB,OAAe,EACf,EAAE,CACF,gBAAM,CAAC,KAAK,CACV,IAAA,gBAAQ,EAAC,GAAG,CAAC,EACb,IAAI,EACJ,IAAI,uBAAc,CAAC;IACjB,OAAO,EAAE,YAAY,YAAY,OAAO,OAAO,EAAE;IACjD,MAAM,EAAE,GAAG;CACZ,CAAC,CACH,CAAC;AAZS,QAAA,YAAY,gBAYrB;AACG,MAAM,iBAAiB,GAAG,CAC/B,GAAY,EACZ,UAAkB,EAClB,YAAoB,EACpB,OAAe,EACf,EAAE;IACF,IAAA,oBAAY,EAAC,GAAG,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;IACzC,gBAAM,CAAC,KAAK,CACV,GAAa,EACb,UAAU,EACV,YAAY,YAAY,OAAO,OAAO,EAAE,CACzC,CAAC;AACJ,CAAC,CAAC;AAZW,QAAA,iBAAiB,qBAY5B","sourcesContent":["import assert, { AssertionError } from 'assert';\n\nexport const isString = (str: unknown) => typeof str === 'string';\nexport const assertString = (\n  str: unknown,\n  functionName: string,\n  message: string,\n) =>\n  assert.equal(\n    isString(str),\n    true,\n    new AssertionError({\n      message: `ERROR - [${functionName}] - ${message}`,\n      actual: str,\n    }),\n  );\nexport const assertStringValue = (\n  str: unknown,\n  expression: RegExp,\n  functionName: string,\n  message: string,\n) => {\n  assertString(str, functionName, message);\n  assert.match(\n    str as string,\n    expression,\n    `ERROR - [${functionName}] - ${message}`,\n  );\n};\n"]}